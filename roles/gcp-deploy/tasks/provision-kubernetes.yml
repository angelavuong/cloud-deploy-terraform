---

- name: "Create GCP Kubernetes Cluster {{ gcp_prefix }}-cluster"
  gcp_container_cluster:
    name: "{{ gcp_prefix }}-cluster"
    initial_node_count: 3
    master_auth:
      client_certificate_config:
        issue_client_certificate: yes
      username: admin
      password: gwC3aS25ztYsN9U*Y8
    kubectl_path: "{{ working_dir }}/{{gcp_prefix}}-config"
    node_config:
      machine_type: n1-standard-1
      disk_size_gb: 100
    location: "{{ gcp_zone }}"
    state: present
  register: gcp_cluster

- name: create a node pool
  gcp_container_node_pool:
    name: "{{ gcp_prefix }}-pool"
    initial_node_count: 3
    cluster: "{{ gcp_cluster }}"
    location: "{{ gcp_zone }}"
    state: present

- debug:
    var: gcp_cluster

- copy:
    content: "{{ gcp_cluster.masterAuth.clientCertificate | b64decode }}"
    dest: "{{ working_dir }}/gcp_cert.crt"

# - set_fact:
#     gcp_project: '{{ lookup("env", "GCE_PROJECT") }}'
#   no_log: true
#
# - command: gcloud container clusters get-credentials {{ gcp_prefix }}-cluster --zone {{ gcp_zone }} --project {{ gcp_project }}
#   no_log: true

# - name: Create a k8s namespace
#   k8s:
#     name: testing
#     api_version: v1
#     kind: Namespace
#     host: "{{ gcp_cluster.endpoint }}"
#     kubeconfig: "{{ working_dir }}/{{gcp_prefix}}-config"
#     # context: "{{ gcp_cluster.kubectl_context }}"
#     # client_cert: "{{ working_dir }}/gcp_cert.crt"
#     state: present

# - name: Create an nginx Pod
#   k8s:
#     host: "{{ gcp_cluster.endpoint }}"
#     kubeconfig: "{{ working_dir }}/{{gcp_prefix}}-config"
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Pod
#       metadata:
#         name: web
#       spec:
#         containers:
#           - name: nginx-container
#             image: nginx
